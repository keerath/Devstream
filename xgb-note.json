{"paragraphs":[{"text":"import ml.dmlc.xgboost4j.scala.spark.XGBoost\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.feature.{OneHotEncoder, SQLTransformer, StringIndexer, VectorAssembler}\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.catalyst.encoders.ExpressionEncoder\nimport ml.dmlc.xgboost4j.scala.spark.XGBoost\nimport org.apache.spark.ml.feature.ChiSqSelector\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.functions.col\nimport org.apache.spark.storage.StorageLevel","dateUpdated":"2016-11-03T16:30:34+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1477602685290_-132140140","id":"20161028-024125_1316617662","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport ml.dmlc.xgboost4j.scala.spark.XGBoost\n\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.classification.LogisticRegression\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport org.apache.spark.ml.feature.{OneHotEncoder, SQLTransformer, StringIndexer, VectorAssembler}\n\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.catalyst.encoders.ExpressionEncoder\n\nimport ml.dmlc.xgboost4j.scala.spark.XGBoost\n\nimport org.apache.spark.ml.feature.ChiSqSelector\n\nimport org.apache.spark.sql.DataFrame\n\nimport org.apache.spark.sql.functions.col\n\nimport org.apache.spark.storage.StorageLevel\n"},"dateCreated":"2016-10-28T02:41:25+0530","dateStarted":"2016-11-03T16:30:23+0530","dateFinished":"2016-11-03T16:30:24+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:219","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478170814888_-782589812","id":"20161103-163014_565610910","dateCreated":"2016-11-03T16:30:14+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2445","text":"/* Model classes for various data sets */\ncase class PageViews(uuid: String, document_id: Int, timestamp: Int, platform: Int, geo_location: String, traffic_source: Int)\ncase class ClicksTrain(display_id: Int, ad_id: Int, clicked: Int)\ncase class ClicksTest(display_id: Int, ad_id: Int)\ncase class DocCategories(document_id: Int, category_id: Int, confidence_level: Double)  \ncase class DocEntities(document_id: Int, entity_id: String, confidence_level: Double)\ncase class DocMeta(document_id: Int, source_id: Int, publisher_id: Int, pushlish_time: java.sql.Timestamp)\ncase class DocTopics(document_id: Int, topic_id: Int, confidence_level: Double)\ncase class Event(display_id: Int, uuid: String, document_id: Int, timestamp: Int, platform: String, geo_location: String)\ncase class PromotedContent(ad_id: Int, document_id: Int, campaign_id: Int, advertiser_id: Int)\ncase class Submission(display_id: Int, ad_id: String)\ncase class AdProb(ad_id: Int, display_id: Int, prob: Double)\n\ncase class AllFeatures (ad_doc_id: Int,ad_id: Int,document_id: Int,display_id: Int,clicked: Int,uuid: String,platform: String,country: String,state: String,county: String,category_id: Int,topic_id: Int,source_id: Int,publisher_id: Int,campaign_id: Int,advertiser_id: Int,ad_category_id: Int,ad_topic_id: Int,ad_source_id: Int,ad_publisher_id: Int)\ncase class TestData (ad_doc_id: Int,ad_id: Int,document_id: Int,display_id: Int, uuid: String,platform: String,country: String,state: String,county: String,category_id: Int,topic_id: Int,source_id: Int,publisher_id: Int,campaign_id: Int,advertiser_id: Int,ad_category_id: Int,ad_topic_id: Int,ad_source_id: Int,ad_publisher_id: Int)","dateUpdated":"2016-11-03T16:32:09+0530","dateFinished":"2016-11-03T16:30:20+0530","dateStarted":"2016-11-03T16:30:19+0530","result":{"code":"SUCCESS","type":"TEXT","msg":"\ndefined class PageViews\n\ndefined class ClicksTrain\n\ndefined class ClicksTest\n\ndefined class DocCategories\n\ndefined class DocEntities\n\ndefined class DocMeta\n\ndefined class DocTopics\n\ndefined class Event\n\ndefined class PromotedContent\n\ndefined class Submission\n\ndefined class AdProb\n"}},{"text":"\nval featureAvgs= Array(\n    (\"ad_id\",0.06351346920722688), (\"ad_topic_id\",0.1978778266088731), (\"ad_publisher_id\",0.17603670874002664), \n    (\"publisher_id\",0.21917045158063883), (\"county\",0.19326272059156435), (\"topic_id\",0.19850092554763543), \n    (\"advertiser_id\",0.1674121552399546), (\"ad_category_id\",0.19069549203839342), (\"category_id\",0.19562907278719383), \n    (\"state\",0.1829447071316398), (\"platform\",0.17439754637181157), (\"country\",0.18738591250545755))\n","dateUpdated":"2016-11-03T16:30:49+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478080176569_-661056784","id":"20161102-151936_968308838","result":{"code":"SUCCESS","type":"TEXT","msg":"\nfeatureAvgs: Array[(String, Double)] = Array((ad_id,0.06351346920722688), (ad_topic_id,0.1978778266088731), (ad_publisher_id,0.17603670874002664), (publisher_id,0.21917045158063883), (county,0.19326272059156435), (topic_id,0.19850092554763543), (advertiser_id,0.1674121552399546), (ad_category_id,0.19069549203839342), (category_id,0.19562907278719383), (state,0.1829447071316398), (platform,0.17439754637181157), (country,0.18738591250545755))\n"},"dateCreated":"2016-11-02T03:19:36+0530","dateStarted":"2016-11-03T14:55:36+0530","dateFinished":"2016-11-03T15:01:19+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:220","focus":true},{"text":"def readCsv[T](fileName: String)(implicit typeTag: scala.reflect.runtime.universe.TypeTag[T]) =\n    spark.read.schema(ExpressionEncoder().schema).option(\"header\",true).csv(s\"\"\"/kaggle/$fileName.csv\"\"\").repartition(1000)\n\nval dataset = readCsv[AllFeatures](\"all-features\").as[AllFeatures].withColumn(\"types\", lit(0)).persist(StorageLevel.MEMORY_AND_DISK)\nval datatest = readCsv[TestData](\"test-data\").as[TestData].withColumn(\"types\", lit(1)).withColumn(\"clicked\", lit(1))\n","dateUpdated":"2016-11-03T16:32:08+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1477602714554_1781813783","id":"20161028-024154_914863695","result":{"code":"SUCCESS","type":"TEXT","msg":"\nreadCsv: [T](fileName: String)(implicit typeTag: reflect.runtime.universe.TypeTag[T])org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n\ndataset: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [ad_doc_id: int, ad_id: int ... 19 more fields]\n\ndatatest: org.apache.spark.sql.DataFrame = [ad_doc_id: int, ad_id: int ... 19 more fields]\n"},"dateCreated":"2016-10-28T02:41:54+0530","dateStarted":"2016-11-03T16:32:05+0530","dateFinished":"2016-11-03T16:32:06+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:221","focus":true},{"text":"def getAvgProb(feature: String, df: DataFrame, reg:Int = 10): (String, Double) = {\n    val featureProb = s\"${feature}_prob\"\n    val df1 = df.groupBy(feature)\n    .agg(count(\"clicked\"), sum(\"clicked\"))\n    .withColumnRenamed(\"count(clicked)\", \"count\")\n    .withColumnRenamed(\"sum(clicked)\", \"sum\")\n    .withColumn(\"count\", $\"count\" + lit(reg))\n    .withColumn(featureProb, $\"sum\" / $\"count\")\n    .select(feature, featureProb)\n    \n    (feature, df1.agg(avg(featureProb)).take(1)(0).getDouble(0))\n}\n\ndef aggOverFeature(feature: String, avgProb: Double, trainDF: DataFrame, testDF: DataFrame,reg: Int = 10): (DataFrame, DataFrame) = {\n    val featureProb = s\"${feature}_prob\"\n    \n    val df = dataset.groupBy(feature)\n    .agg(count(\"clicked\"), sum(\"clicked\"))\n    .withColumnRenamed(\"count(clicked)\", \"count\")\n    .withColumnRenamed(\"sum(clicked)\", \"sum\")\n    .withColumn(\"count\", $\"count\" + lit(reg))\n    .withColumn(featureProb, $\"sum\" / $\"count\")\n    .select(feature, featureProb)\n    \n    val transformedTrainDF = trainDF.join(broadcast(df), Seq(feature))\n    \n    val transformedTestDF = testDF.join(broadcast(df), Seq(feature), \"left_outer\").na.fill(avgProb, Seq(featureProb))\n    (transformedTrainDF, transformedTestDF)\n}","dateUpdated":"2016-11-03T16:32:45+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478075242526_-1062978702","id":"20161102-135722_756047120","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngetAvgProb: (feature: String, df: org.apache.spark.sql.DataFrame, reg: Int)(String, Double)\n\naggOverFeature: (feature: String, avgProb: Double, trainDF: org.apache.spark.sql.DataFrame, testDF: org.apache.spark.sql.DataFrame, reg: Int)(org.apache.spark.sql.DataFrame, org.apache.spark.sql.DataFrame)\n"},"dateCreated":"2016-11-02T01:57:22+0530","dateStarted":"2016-11-03T15:06:04+0530","dateFinished":"2016-11-03T15:06:42+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:222"},{"text":"val trainFull = spark.read.option(\"header\",true).option(\"inferSchema\",true).csv(\"/kaggle/train-full-trans.csv\").repartition(1000)\nval testFull = spark.read.option(\"header\",true).option(\"inferSchema\",true).csv(\"/kaggle/test-full-trans.csv\").repartition(1000)\n\nval pipeline = new Pipeline().setStages(Array(new VectorAssembler().setInputCols(featureAvgs.map(f => s\"${f._1}_prob\")).setOutputCol(\"features\")))\nval train = pipeline.fit(trainFull).transform(trainFull).withColumn(\"label\", $\"clicked\".cast(\"double\")).select(\"label\", \"features\", \"display_id\", \"ad_id\")\nval test = pipeline.fit(testFull).transform(testFull).select(\"display_id\", \"ad_id\", \"features\")\ndataset.unpersist()","dateUpdated":"2016-11-03T16:34:15+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478119347728_532546662","id":"20161103-021227_1672440645","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntrainFull: org.apache.spark.sql.DataFrame = [country: string, platform: string ... 31 more fields]\n\ntestFull: org.apache.spark.sql.DataFrame = [country: string, platform: int ... 31 more fields]\n"},"dateCreated":"2016-11-03T02:12:27+0530","dateStarted":"2016-11-03T15:06:42+0530","dateFinished":"2016-11-03T15:09:08+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:226"},{"text":"val numRound = 200\nval numWorkers = 16\n\nval paramMap = List(\n      \"eta\" -> 0.023f,\n      \"max_depth\" -> 5,\n      \"min_child_weight\" -> 3.0,\n      \"subsample\" -> 0.85,\n      \"colsample_bytree\" -> 0.82,\n      \"colsample_bylevel\" -> 0.9,\n      \"base_score\" -> 0.005,\n      \"eval_metric\" -> \"auc\",\n      \"seed\" -> 49,\n      \"silent\" -> 0,\n      \"objective\" -> \"binary:logistic\").toMap\n\nval xgBoostModelWithDF = XGBoost.trainWithDataFrame(train, paramMap,round = numRound, nWorkers = numWorkers, useExternalMemory = true)\n\nval predictions = xgBoostModelWithDF.setExternalMemory(true).transform(test)","dateUpdated":"2016-11-03T16:35:13+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1477602832725_1207353027","id":"20161028-024352_1603947434","result":{"code":"SUCCESS","type":"TEXT","msg":"\nnumRound: Int = 200\n\nnumWorkers: Int = 16\n\nparamMap: scala.collection.immutable.Map[String,Any] = Map(min_child_weight -> 3.0, base_score -> 0.005, colsample_bylevel -> 0.9, silent -> 0, seed -> 49, subsample -> 0.85, max_depth -> 5, objective -> binary:logistic, eval_metric -> auc, eta -> 0.023, colsample_bytree -> 0.82)\n\nxgBoostModelWithDF: ml.dmlc.xgboost4j.scala.spark.XGBoostModel = XGBoostClassificationModel_a053e87d3295\n\npredictions: org.apache.spark.sql.DataFrame = [display_id: int, ad_id: int ... 3 more fields]\n"},"dateCreated":"2016-10-28T02:43:52+0530","dateStarted":"2016-11-03T15:09:09+0530","dateFinished":"2016-11-03T15:38:25+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:232","focus":true},{"text":"\nval getProb: (org.apache.spark.ml.linalg.Vector => Double) = (v: org.apache.spark.ml.linalg.Vector) => v.toArray(1)\nval xgboostPredictions = predictions.select(\"display_id\", \"ad_id\", \"probabilities\")\n\nxgboostPredictions.withColumn(\"prob\", udf(getProb).apply($\"probabilities\"))\n.select(\"ad_id\", \"display_id\", \"prob\").as[AdProb].groupByKey(_.display_id)\n.mapGroups((k,itr) => (k, itr.toList.sortBy(_.prob).reverse.map(_.ad_id).take(12).mkString(\" \")))\n.withColumnRenamed(\"_1\", \"display_id\").withColumnRenamed(\"_2\", \"ad_id\")\n.coalesce(1).write.option(\"header\", true).csv(\"/kaggle/submission-xgb-feat-eng.csv\")","dateUpdated":"2016-11-03T16:36:50+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1477603195763_-456481066","id":"20161028-024955_418595949","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngetProb: org.apache.spark.ml.linalg.Vector => Double = <function1>\n\nxgboostPredictions: org.apache.spark.sql.DataFrame = [display_id: int, ad_id: int ... 1 more field]\n"},"dateCreated":"2016-10-28T02:49:55+0530","dateStarted":"2016-11-03T16:12:22+0530","dateFinished":"2016-11-03T16:13:26+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:234","focus":true},{"text":"xgBoostModelWithDF.booster.getFeatureScore().map{ case (k,v) => featureAvgs.map(_._1).apply(k.stripPrefix(\"f\").toInt) -> v}.toList.sortBy(-_._2)","dateUpdated":"2016-11-03T16:39:02+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478070115848_1018690004","id":"20161102-123155_2020864211","result":{"code":"SUCCESS","type":"TEXT","msg":"\nres70: List[(String, Integer)] = List((publisher_id,1423), (category_id,764), (ad_id,729), (ad_category_id,692), (advertiser_id,668), (topic_id,485), (platform,447), (country,326), (ad_topic_id,313), (ad_publisher_id,278), (state,66), (county,6))\n"},"dateCreated":"2016-11-02T12:31:55+0530","dateStarted":"2016-11-03T16:39:02+0530","dateFinished":"2016-11-03T16:39:02+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:236","focus":true},{"text":"import java.io.PrintWriter;\n\nval writer = new PrintWriter(\"/home/hadoop-user/features\", \"UTF-8\")\nval features = xgBoostModelWithDF.booster.getModelDump().mkString(\"\\n*****\\n\")\nwriter.println(features)\nwriter.close()","dateUpdated":"2016-11-02T12:43:12+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478069522423_405008930","id":"20161102-122202_1471428616","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport java.io.PrintWriter\n\nwriter: java.io.PrintWriter = java.io.PrintWriter@4748dc88\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeatures: String =\n\"0:[f6<1302] yes=1,no=2,missing=2\n\t1:[f5<47] yes=3,no=4,missing=4\n\t\t3:[f0<232] yes=7,no=8,missing=8\n\t\t\t7:[f1<91] yes=15,no=16,missing=15\n\t\t\t\t15:[f2<1175] yes=31,no=32,missing=32\n\t\t\t\t\t31:leaf=1.15367\n\t\t\t\t\t32:leaf=2.64494\n\t\t\t\t16:[f2<1066] yes=33,no=34,missing=34\n\t\t\t\t\t33:leaf=0.82646\n\t\t\t\t\t34:leaf=0.542646\n\t\t\t8:[f2<407] yes=17,no=18,missing=18\n\t\t\t\t17:[f2<252] yes=35,no=36,missing=36\n\t\t\t\t\t35:leaf=1.75138\n\t\t\t\t\t36:leaf=2.40795\n\t\t\t\t18:[f2<1066] yes=37,no=38,missing=38\n\t\t\t\t\t37:leaf=1.32052\n\t\t\t\t\t38:leaf=0.813763\n\t\t4:[f7<1210] yes=9,no=10,missing=10\n\t\t\t9:[f2<874] yes=19,no=20,missing=19\n\t\t\t\t19:[f6<1206] yes=39,no=40,missing=40\n\t\t\t\t\t39:leaf=0.875099\n\t\t\t\t\t40:leaf=0.707897\n\t\t\t\t20:[f2<1029] yes=41,no=42,missing=42\n\t\t\t\t\t41:leaf=0.575269\n\t\t\t\t\t42:leaf=0.803554\n\t\t\t10:[f5<580] yes=21,no=..."},"dateCreated":"2016-11-02T12:22:02+0530","dateStarted":"2016-11-02T12:43:12+0530","dateFinished":"2016-11-02T12:43:13+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:237"},{"text":"","dateUpdated":"2016-11-01T06:57:09+0530","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478006814160_962108663","id":"20161101-185654_1558477489","dateCreated":"2016-11-01T06:56:54+0530","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:243"}],"name":"OutBrainXGBoost","id":"2C25JJ5SX","angularObjects":{"2BXPSN1PP:shared_process":[],"2C1FXVSJF:shared_process":[],"2BY267GMH:shared_process":[],"2C1WQ6956:shared_process":[],"2C1YNSRZH:shared_process":[],"2BY9S8QJN:shared_process":[],"2C1C7DQAD:shared_process":[],"2BYFURGTN:shared_process":[],"2BYFMEQCZ:shared_process":[],"2BZH2BYZA:shared_process":[],"2C1195HVS:shared_process":[],"2BXTDG85C:shared_process":[],"2BYR8P5T7:shared_process":[],"2C27SQTE2:shared_process":[],"2C2BWSMN4:shared_process":[],"2BY34JSMW:shared_process":[],"2C1JGE3KV:shared_process":[],"2BZB62X7U:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}